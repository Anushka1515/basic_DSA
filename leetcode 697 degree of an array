class Solution {
public:
    int findShortestSubArray(vector<int>& nums) {
       unordered_map<int, int> frequency, leftmost;
       int max_degree = 0, min_length = INT_MAX;

       for (int i = 0; i < nums.size(); ++i) {
           if (leftmost.find(nums[i]) == leftmost.end()) {
               leftmost[nums[i]] = i;
           }
           int count = ++frequency[nums[i]];
           if (count > max_degree) {
               max_degree = count;
               min_length = i - leftmost[nums[i]] + 1;
           } else if (count == max_degree) {
               min_length = min(min_length, i - leftmost[nums[i]] + 1);
           }
       }

       return min_length;
    }
    
};
