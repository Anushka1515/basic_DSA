class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> freqMap;
        for (int x : nums) {
            freqMap[x]++;
        }

        int maxFreq = 0;
        for (auto& entry : freqMap) {
            maxFreq = max(maxFreq, entry.second);
        }

        vector<vector<int>> buckets(maxFreq + 1);
        for (auto& entry : freqMap) {
            buckets[entry.second].push_back(entry.first);
        }

        vector<int> result;
        for (int i = maxFreq; i >= 0 && result.size() < k; --i) {
            for (int num : buckets[i]) {
                result.push_back(num);
                if (result.size() == k) {
                    break;
                }
            }
        }

        return result;
        
        
    }
};
