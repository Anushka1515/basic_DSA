class Solution {
public:
    int maximumLengthSubstring(string s) {
        int maxLength = 0;
        for (int i = 0; i < s.length(); ++i) {
            unordered_map<char, int> charCount;
            int length = 0;
            for (int j = i; j < s.length(); ++j) {
                charCount[s[j]]++;
                if (charCount[s[j]] <= 2) {
                    ++length;
                    maxLength = max(maxLength, length);
                } else {
                    break; // Break if a character appears more than twice
                }
            }
        }
        return maxLength;
        
    }
};
