/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findSecondMinimumValue(TreeNode* root) {
        vector<int> nodearr;
        findnodes(root,nodearr);
        sort(nodearr.begin(),nodearr.end());
        set<int> s;
        vector<int> ans;
        for(int x: nodearr){
            s.insert(x);
        }
        for(int x:s){
            ans.push_back(x);
        }
        if(ans.size()==1){
            return -1;
        }
        return ans[1];
        
    }
private:
    void findnodes(TreeNode* root,vector<int>&nodearr){
        if(root == nullptr){
            return;
        }
        nodearr.push_back(root -> val);
        findnodes(root -> left,nodearr);
        findnodes(root->right,nodearr);
    }
    
};
