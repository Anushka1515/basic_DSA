class Solution {
public:
    bool buddyStrings(string s, string goal) {
        if (s.length() != goal.length()) {
            return false;
        }

        if (s == goal) {
            // Check if there is any duplicate character in s
            vector<int> freq(26, 0);
            for (char c : s) {
                freq[c - 'a']++;
                if (freq[c - 'a'] > 1) {
                    return true;
                }
            }
            return false;
        }

        vector<int> mismatch;
        for (int i = 0; i < s.length(); i++) {
            if (s[i] != goal[i]) {
                mismatch.push_back(i);
                if (mismatch.size() > 2) {
                    return false;
                }
            }
        }

        return mismatch.size() == 2 && 
               s[mismatch[0]] == goal[mismatch[1]] && 
               s[mismatch[1]] == goal[mismatch[0]];
    }
};
