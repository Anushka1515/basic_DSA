/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        vector<int> treearr;
        maketree(root,treearr);
        sort(treearr.begin(),treearr.end());
        return treearr[k-1];
        
        
    }
private:
    void maketree(TreeNode* root,vector<int>& treearr){
        if(root == nullptr){
            return;
        }
        treearr.push_back(root -> val);
        maketree(root -> left,treearr);
        maketree(root -> right,treearr);
    }
};
